{"version":3,"sources":["../../src/js/index.js"],"names":["mainElement","document","querySelector","drawMessage","htmlBoard","state","nState","JSON","parse","stringify","initGameState","turn","winner","winnerColor","full","board","toggleColor","firstEmptyRow","col","reduce","acc","value","index","dropStone","colElement","newState","colIndex","parseInt","dataset","rowIndex","console","log","fullCheck","boardFull","slice","fullCheckChecker","generateBoardHtml","colsHtml","colHtml","rowsHtml","row","drawBoard","htmlElement","boardElement","createElement","id","classList","add","innerHTML","appendChild","stateMessage","addEventListener","event","target","matches","closest","newBoard","textContent","window"],"mappings":"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","sourcesContent":["\n// ------------------------- MODEL\n\nconst mainElement = document.querySelector('main');\nconst drawMessage = document.querySelector('.drawMessage');\n\nlet htmlBoard = null;\nlet state = null;\n\n// ------------------------- UPDATE\n\nfunction nState(state){\n  return JSON.parse(JSON.stringify(state));\n}\n\nfunction initGameState() {\n  return {\n    turn: 'yellow',\n    winner: false,\n    winnerColor: null,\n    full: false,\n    board: [['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\n    ],\n  };\n}\n\nfunction toggleColor(turn) {\n  if (state.turn === 'yellow') {\n    return 'red';\n  } else {\n    return 'yellow';\n  }\n  /*\n  htmlBoard.classList.remove('yellow');\n  htmlBoard.classList.add('red'); */\n}\n\nfunction firstEmptyRow(col) {\n  return col.reduce(function (acc, value, index) {\n    if (acc === false && value === 'empty') {\n      return index;\n    }\n    return acc;\n  }, false);\n}\n\nfunction dropStone(colElement, state) {\n  const newState = nState(state);\n  const colIndex = parseInt(colElement.dataset.index);\n  const rowIndex = firstEmptyRow(state.board[colIndex]);\n  if (rowIndex === false) {\n    return false;\n  } else {\n    newState.board[colElement.dataset.index][rowIndex] = newState.turn;\n    console.log(state.board);\n    return newState;\n  }\n}\n\nfunction fullCheck(board) {\n  const boardFull = board.reduce(function (acc, col) {\n    if (acc) {\n      return col.slice(-1)[0] !== 'empty';\n    }\n    return acc;\n  }, true);\n  return boardFull;\n}\n\nfunction fullCheckChecker(state) {\n  if (fullCheck(state.board) === true) {\n    state.full = true;\n  }\n  return state;\n}\n\n// ------------------------- VIEW\n\nfunction generateBoardHtml(board) {\n  return board.reduce(function (colsHtml, col, colIndex) {\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\n    colHtml += col.reduce(function (rowsHtml, row, rowIndex) {\n      return '<div class=\"row ' + row + '\"></div>' + rowsHtml;\n    }, '');\n    colHtml += '</div>';\n    return colsHtml + colHtml;\n  }, '');\n}\n\nfunction drawBoard(board, turn, htmlElement, boardElement) {\n  if (!boardElement) {\n    boardElement = document.createElement('div');\n  }\n\n  boardElement.id = 'board';\n  boardElement.classList.add(turn);\n  boardElement.innerHTML = generateBoardHtml(board);\n  htmlElement.appendChild(boardElement);\n  return boardElement;\n}\n\nfunction stateMessage(state) {\n  if (state.full === true) {\n    return \"gelijk\";\n  } else if (state.winner === true) {\n    return \"winner \" + state.winnerColor;\n  }\n\n  return \"\";\n}\n\n// ------------------------- EVENT\n\n\nhtmlBoard.addEventListener('click', function (event) {\n\n  if (event.target.matches('.col,.row')) {\n    const colElement = event.target.closest('.col');\n    const newBoard = dropStone(colElement, state);\n\n    if (newBoard) {\n      state.board = newBoard;\n      state.full = fullCheck(state.board);\n      state.turn = toggleColor(turn);\n      drawMessage.textContent = stateMessage(state);\n      drawBoard(state.board, state.turn, mainElement, htmlBoard);\n    } else if (state.full === true) {\n      initGameState();\n      drawBoard(state.board, state.turn, mainElement, htmlBoard);\n      drawMessage.textContent = stateMessage(state);\n    }\n  }\n});\n\nwindow.addEventListener('load', function () {\n  state = initGameState();\n});\n\nhtmlBoard = drawBoard(state.board, state.turn, mainElement);\n\n\n"],"file":"index.js"}