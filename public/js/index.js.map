{"version":3,"sources":["../../src/js/index.js"],"names":["mainElement","document","querySelector","drawMessage","initGameState","state","turn","winner","winnerColor","full","board","generateBoardHtml","reduce","colsHtml","col","colIndex","colHtml","rowsHtml","row","rowIndex","drawBoard","htmlElement","boardElement","createElement","id","classList","add","innerHTML","appendChild","changeTurn","htmlboard","remove","dropStone","colList","indexEmpty","dataset","index","acc","value","console","log","fullCheck","checkFull","fullCheckChecker","stateMessage","addEventListener","event","target","closest","matches","newDrop","textContent"],"mappings":"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","sourcesContent":["//html elements\r\nlet mainElement = document.querySelector('main');\r\nlet drawMessage = document.querySelector('.drawMessage');\r\ninitGameState();\r\nlet state = {\r\n  turn: 'yellow',\r\n  winner: false,\r\n  winnerColor: null,\r\n  full: false,\r\n  board: [['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty']]\r\n};\r\n\r\nfunction generateBoardHtml(board) {\r\n  return board.reduce(function (colsHtml, col, colIndex) {\r\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\r\n    colHtml += col.reduce(function (rowsHtml, row, rowIndex) {\r\n      return '<div class=\"row ' + row + '\"></div>' + rowsHtml;\r\n    }, '');\r\n    colHtml += '</div>';\r\n    return colsHtml + colHtml;\r\n  }, '');\r\n}\r\n\r\nfunction drawBoard(board, turn, htmlElement, boardElement) {\r\n  if (!boardElement) {\r\n    boardElement = document.createElement('div');\r\n  }\r\n\r\n  boardElement.id = 'board';\r\n  boardElement.classList.add(turn);\r\n  boardElement.innerHTML = generateBoardHtml(board);\r\n  htmlElement.appendChild(boardElement);\r\n  return boardElement;\r\n}\r\n\r\nfunction changeTurn(state, col) {\r\n  if (state.turn === 'yellow') {\r\n    state.turn = 'red';\r\n    htmlboard.classList.remove('yellow');\r\n    htmlboard.classList.add('red');\r\n  } else {\r\n    state.turn = 'yellow';\r\n    htmlboard.classList.remove('red');\r\n    htmlboard.classList.add('yellow');\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction dropStone(colList, state) {\r\n  let indexEmpty = state.board[colList.dataset.index].reduce(function (acc, value, index) {\r\n    if (acc === false) {\r\n      if (value === 'empty') {\r\n        return index;\r\n      } else {\r\n        return acc;\r\n      }\r\n    } else {\r\n      return acc;\r\n    }\r\n  }, false);\r\n\r\n  if (indexEmpty === false) {\r\n    return false;\r\n  } else {\r\n    state.board[colList.dataset.index][indexEmpty] = state.turn;\r\n    console.log(state.board);\r\n    return state;\r\n  }\r\n}\r\n\r\nfunction fullCheck(board) {\r\n  let checkFull = board.reduce(function (colsHtml, col, colIndex) {\r\n    return col.reduce(function (acc, row, rowIndex) {\r\n      if (row === 'empty') {\r\n        return false;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, colsHtml);\r\n  }, true);\r\n  return checkFull;\r\n}\r\n\r\nfunction initGameState() {\r\n  state = {\r\n    turn: 'yellow',\r\n    winner: false,\r\n    winnerColor: null,\r\n    full: false,\r\n    board: [['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'], ['empty', 'empty', 'empty', 'empty', 'empty', 'empty']]\r\n  };\r\n}\r\n\r\nfunction fullCheckChecker(state) {\r\n  if (fullCheck(state.board) === true) {\r\n    state.full = true;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction stateMessage(state) {\r\n  if (state.full === true) {\r\n    return \"gelijk\";\r\n  } else if (state.winner === true) {\r\n    return \"winner \" + state.winnerColor;\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nlet htmlboard = drawBoard(state.board, state.turn, mainElement);\r\nhtmlboard.addEventListener('click', function (event) {\r\n  let colList = event.target.closest('.col');\r\n\r\n  if (event.target.matches('.col,.row')) {\r\n    let newDrop = dropStone(colList, state);\r\n\r\n    if (newDrop) {\r\n      state = newDrop;\r\n      state = fullCheckChecker(state);\r\n      state = changeTurn(state);\r\n      drawMessage.textContent = stateMessage(state);\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n    } else if (state.full === true) {\r\n      initGameState();\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n      drawMessage.textContent = stateMessage(state);\r\n    }\r\n  }\r\n});\r\n\r\n"],"file":"index.js"}