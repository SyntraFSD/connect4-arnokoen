{"version":3,"sources":["../../src/js/index.js"],"names":["mainElement","document","querySelector","messageElement","htmlBoard","state","nState","JSON","parse","stringify","initGameState","turn","winner","winnerColor","full","board","toggleColor","color","firstEmptyRow","col","reduce","acc","value","index","dropStone","colElement","newState","colIndex","parseInt","dataset","rowIndex","console","log","fullCheck","boardFull","slice","hasFourInARow","colArray","generateBoardHtml","colsHtml","colHtml","rowsHtml","row","drawTurn","boardElement","classList","add","remove","stateMessage","drawMessage","textContent","drawBoard","htmlElement","createElement","id","innerHTML","appendChild","window","addEventListener","event","target","matches","closest"],"mappings":"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","sourcesContent":["\r\n// ------------------------- MODEL\r\n\r\nconst mainElement = document.querySelector('main');\r\nconst messageElement = document.querySelector('.drawMessage');\r\n\r\nlet htmlBoard = null;\r\nlet state = null;\r\n\r\n// ------------------------- UPDATE\r\n\r\nfunction nState(state){\r\n  return JSON.parse(JSON.stringify(state));\r\n}\r\n\r\nfunction initGameState() {\r\n  return {\r\n    turn: 'yellow',\r\n    winner: false,\r\n    winnerColor: null,\r\n    full: false,\r\n    board: [['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ],\r\n  };\r\n}\r\n\r\nfunction toggleColor(color) {\r\n  if (color === 'yellow') {\r\n    return 'red';\r\n  } else {\r\n    return 'yellow';\r\n  }\r\n}\r\n\r\nfunction firstEmptyRow(col) {\r\n  return col.reduce(function (acc, value, index) {\r\n    if (acc === false && value === 'empty') {\r\n        return index;\r\n      }\r\n        return acc;\r\n  }, false);\r\n}\r\n\r\nfunction dropStone(colElement, state) {\r\n  const newState = nState(state);\r\n  const colIndex = parseInt(colElement.dataset.index);\r\n  const rowIndex = firstEmptyRow(state.board[colIndex]);\r\n  if (rowIndex === false) {\r\n    return false;\r\n  } else {\r\n    newState.board[colElement.dataset.index][rowIndex] = newState.turn;\r\n    console.log(state.board);\r\n    return newState;\r\n  }\r\n}\r\n\r\nfunction fullCheck(board) {\r\n  const boardFull = board.reduce(function (acc, col) {\r\n    if (acc) {\r\n      return col.slice(-1)[0] !== 'empty';\r\n    }\r\n    return acc;\r\n  }, true);\r\n  return boardFull;\r\n}\r\n\r\nfunction hasFourInARow(colArray){\r\n  console.log(colArray.reduce(function (acc, color, index, col){\r\n    if (index !== 0){\r\n      if (acc >= 4){\r\n        return acc;\r\n      }\r\n      if (color === col[index - 1] && color !== 'empty') {\r\n        return acc + 1;\r\n      }\r\n    }\r\n    else {\r\n      return 1;\r\n    }\r\n  }, 0));\r\n}\r\n\r\n\r\n\r\n// ------------------------- VIEW\r\n\r\nfunction generateBoardHtml(board) {\r\n  return board.reduce(function (colsHtml, col, colIndex) {\r\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\r\n    colHtml += col.reduce(function (rowsHtml, row) {\r\n      return '<div class=\"row ' + row + '\"></div>' + rowsHtml;\r\n    }, '');\r\n    colHtml += '</div>';\r\n    return colsHtml + colHtml;\r\n  }, '');\r\n}\r\n\r\nfunction drawTurn(boardElement, turn){\r\n  boardElement.classList.add(turn);\r\n  boardElement.classList.remove(toggleColor(turn));\r\n}\r\n\r\nfunction stateMessage(state) {\r\n  if (state.full === true) {\r\n    return 'gelijk ';\r\n  } else if (state.winner === true) {\r\n    return 'winner ' + state.winnerColor;\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nfunction drawMessage(state) {\r\n  messageElement.textContent = stateMessage(state);\r\n}\r\n\r\nfunction drawBoard(state, htmlElement, boardElement) {\r\n  if (!boardElement) {\r\n    boardElement = document.createElement('div');\r\n    boardElement.id = 'board';\r\n  }\r\n  drawTurn(boardElement, state.turn);\r\n  boardElement.innerHTML = generateBoardHtml(state.board);\r\n  htmlElement.appendChild(boardElement);\r\n  drawMessage(state);\r\n  return boardElement;\r\n}\r\n\r\n// ------------------------- EVENT\r\n\r\n\r\n\r\nwindow.addEventListener('load', function () {\r\n  state = initGameState();\r\n  htmlBoard = drawBoard(state, mainElement);\r\n\r\n  htmlBoard.addEventListener('click', function (event) {\r\n\r\n    if (event.target.matches('.col,.row')) {\r\n      const colElement = event.target.closest('.col');\r\n      const newState = dropStone(colElement, state);\r\n\r\n      if (newState) {\r\n        state = newState;\r\n        state.full = fullCheck(state.board);\r\n        state.turn = toggleColor(state.turn);\r\n        drawBoard(state, mainElement, htmlBoard);\r\n      } else if (state.full === true) {\r\n        state = initGameState();\r\n        drawBoard(state, mainElement, htmlBoard);\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\nhasFourInARow(['red', 'red', 'red', 'red', 'empty', 'empty']);\r\n\r\n\r\n"],"file":"index.js"}