{"version":3,"sources":["../../src/js/index.js"],"names":["mobileDropdown","document","querySelector","hamburger","mainElement","addEventListener","classList","toggle","state","turn","board","generateBoardHtml","reduce","html","col","colIndex","colHtml","rowsHtml","row","rowIndex","drawBoard","htmlElement","innerHTML","boardElement","createElement","id","add","appendChild","changeTurn","newState","checkEmpty","boardColumn","checkEmptyTile","emptyIndex","checkColumn","event","target","matches","colElement","closest","colElementDataset","dataset","index","console","log","indexToFill"],"mappings":"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","sourcesContent":["const mobileDropdown = document.querySelector(\".inactive\");\r\nconst hamburger = document.querySelector(\".Header-links--mobile-hamburger\");\r\nconst mainElement = document.querySelector(\"main\");\r\n\r\n\r\n\r\nhamburger.addEventListener(\"click\", function () {\r\n  mobileDropdown.classList.toggle(\"inactive\");\r\n});\r\n\r\nconst state = {\r\n  turn: 'yellow',\r\n  board: [\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n  ],\r\n};\r\n\r\nfunction generateBoardHtml(board) {\r\n  return board.reduce(function (html, col, colIndex) {\r\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\r\n    colHtml += col.reduce(function (rowsHtml, row, rowIndex) {\r\n      return rowsHtml + '<div class=\"row ' + row + '\"></div>';\r\n    }, '');\r\n    colHtml += '</div>';\r\n    return html + colHtml;\r\n  }, '');\r\n}\r\n\r\nfunction drawBoard(board, turn, htmlElement) {\r\nhtmlElement.innerHTML=\"\";\r\n  const boardElement = document.createElement('div');\r\n  boardElement.id = 'board';\r\n  boardElement.classList.add(turn);\r\n  boardElement.innerHTML = generateBoardHtml(board);\r\n  htmlElement.appendChild(boardElement);\r\n}\r\n\r\nfunction changeTurn(state){\r\n  let newState = state;\r\n  if (newState.turn === 'yellow') {\r\n    newState.turn = 'red';\r\n  } else {\r\n    newState.turn = 'yellow';\r\n  }\r\n  return newState;\r\n}\r\n\r\n/*const blabla = state.board.reduce(function(acc, col, colIndex){\r\n  if (acc === false){\r\n    if (col === 'empty') {\r\n      return colIndex;\r\n    }\r\n  }\r\n  return acc + colIndex;\r\n}, false);\r\nconsole.log(blabla);*/\r\n\r\nfunction checkEmpty(state, boardColumn) {\r\n  const newState = state;\r\n  const checkEmptyTile = boardColumn.reduce(function (emptyIndex, row, rowIndex) {\r\n    if (emptyIndex === false) {\r\n      if (row === 'empty') {\r\n        return rowIndex;\r\n      }\r\n    }\r\n    return emptyIndex;\r\n  }, false);\r\n  return checkEmptyTile;\r\n}\r\n\r\nfunction checkColumn(event,state) {\r\n  let newState = state;\r\n  if (event.target.matches('.col') || event.target.matches('.row')){\r\n    const colElement = event.target.closest('.col');\r\n    const colElementDataset = colElement.dataset.index;\r\n    console.log(colElementDataset);\r\n    const boardColumn = newState.board[colElementDataset];\r\n    console.log(boardColumn);\r\n    const indexToFill = checkEmpty(state, boardColumn);\r\n    const board = document.querySelector('#board');\r\n    drawBoard(state.board, state.turn, mainElement);\r\n  }\r\n}\r\n\r\nmainElement.addEventListener('click', function (event) {\r\n  checkColumn(event,state);\r\n});\r\ndrawBoard(state.board, state.turn, mainElement);\r\n\r\n"],"file":"index.js"}